/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package cs345.deadwood;


import cs345.deadwood.controller.GameController;
import cs345.deadwood.model.*;
import cs345.deadwood.view.BoardView;

import java.util.ArrayList;
import java.util.List;

public class Deadwood {


    public static void main(String[] args) {
        /* Get number of players from command line arg
         * Usage: $ ./graldew run --args="2"
         */
        int numberOfPlayers = 2;  // default number of players
        if (args.length > 0) {
            try {
                numberOfPlayers = Integer.parseInt(args[0]);
            } catch (NumberFormatException e) {
                System.out.println("Usage: ./gradlew run --args \"NUM\", where NUM should be an integer between 2 and 8.");
                return;
            }
            if (numberOfPlayers > 8 || numberOfPlayers < 2) {
                System.out.println("Usage: ./gradlew run --args \"NUM\", where NUM should be an integer between 2 and 8.");
                return;
            }
        }



        SetParser setParser  = new SetParser();
        CardParser cardParser = new CardParser();

        List<ISet> setsList = setParser.getSets();
        List<ICard> cardsList = cardParser.getCards();
        ISet trailer = null;

        for (ISet set: setsList){
            if (set.getName().equals("Trailer")){
                trailer = set;
            }
        }

        List<IPlayer> playerList = new ArrayList<>();
        for(int i = 1; i <= numberOfPlayers; i++){
            playerList.add(new Player(i, trailer, 0,0,0,10));
        }

        GameEngine model = new GameEngine(numberOfPlayers, setsList, cardsList, playerList);
        GameController controller = new GameController(model);
        BoardView view = new BoardView(model, controller);

        view.init();
    }
}
